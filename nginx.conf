server {
        listen 80;
        server_name knbot.xyz www.knbot.xyz;

        return 301 https://$host$request_uri;
}

server {
        listen 443 ssl;
        server_name knbot.xyz www.knbot.xyz ;

        ssl_certificate /etc/letsencrypt/live/knbot.xyz/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/knbot.xyz/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        location / {
        root /usr/share/nginx/html;
        try_files $uri $uri/ /index.html =404;
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
        }
        location /api/ {
        proxy_pass http://172.18.0.5:8080;  # API 요청을 백엔드 서버로 프록시
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /swagger-ui/ {
        proxy_pass http://172.18.0.5:8080/swagger-ui/;  # Swagger UI 경로를 백엔드 서버로 프록시
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    location /chat{
        proxy_pass http://172.18.0.5:8080/chat;  # Spring Boot의 WebSocket 엔드포인트
        proxy_http_version 1.1;  # HTTP/1.1 사용
        proxy_set_header Upgrade $http_upgrade;  # WebSocket 업그레이드 헤더
        proxy_set_header Connection "upgrade";  # Connection 헤더
        proxy_set_header Host $host;  # 요청 호스트 헤더
    }
  }